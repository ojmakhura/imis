// Generated by andromda-angular cartridge (view\components\component.ts.vsl) DO NOT EDIT
import {
  AfterViewInit,
  Component,
  inject,
  Input,
  OnDestroy,
  OnInit,
  ViewChild,
  effect
} from "@angular/core";
import {COMMA, ENTER} from '@angular/cdk/keycodes';
import {
  FormsModule,
  ReactiveFormsModule,
  FormGroup,
  FormControl,
  FormBuilder,
  Validators,
  FormArray,
} from "@angular/forms";
import { SelectItem } from "@app/utils/select-item";
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatSelectChange } from '@angular/material/select';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { MatChip, MatChipInput, MatChipInputEvent } from "@angular/material/chips";
import {MatAutocompleteSelectedEvent, MatAutocompleteModule} from '@angular/material/autocomplete';
import { MatDialog } from '@angular/material/dialog';
import { firstValueFrom, Observable, map, of, startWith } from "rxjs";
import { CommonModule } from '@angular/common';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { CsvModule } from '@ctrl/ngx-csv';
import { Gender } from '@app/model/bw/co/roguesystems/imis/customer/gender';
import { CustomerVO } from '@app/model/bw/co/roguesystems/imis/customer/customer-vo';
import { IdType } from '@app/model/bw/co/roguesystems/imis/customer/id-type';
import { KycVO } from '@app/model/bw/co/roguesystems/imis/kyc/kyc-vo';
import { KycFile } from '@app/model/bw/co/roguesystems/imis/kyc/kyc-file';
import { SearchObject } from '@app/model/search-object';
import { CustomerDetailsComponent } from './customer-details.component';
import { TableComponent } from '@app/components/table/table.component';
import { CustomerApiStore } from "@app/store/bw/co/roguesystems/imis/customer/customer-api.store";

@Component({
  selector: "app-customer-details",
  templateUrl: "./customer-details.component.html",
  styleUrls: [],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    CsvModule,
    TableComponent,
  ]
})
export class CustomerDetailsImplComponent extends CustomerDetailsComponent {

  customerStore = inject(CustomerApiStore);

    constructor() {
        super();

        effect(() => {
          let customer = this.customerStore.data();
    
          if(customer) {
            this.formGroupControl.patchValue(customer);
          }
        });
    }
}