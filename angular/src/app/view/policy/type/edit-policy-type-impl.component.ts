// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component } from '@angular/core';
import { EditPolicyTypeComponent } from '@app/view/policy/type/edit-policy-type.component';
import { EditPolicyTypeVarsForm } from '@app/view/policy/type/edit-policy-type.component';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { CsvModule } from '@ctrl/ngx-csv';
import { TableComponent } from '@app/components/table/table.component';
import { PolicyTypeDetailsImplComponent } from '@app/components/policy/type/policy-type-details-impl.component';
import { PolicyTypeEditorImplComponent } from '@app/components/policy/type/policy-type-editor-impl.component';

@Component({
  selector: 'app-edit-policy-type',
  templateUrl: './edit-policy-type.component.html',
  styleUrls: ['./edit-policy-type.component.scss'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    CsvModule,
    TableComponent,
    PolicyTypeDetailsImplComponent,
    PolicyTypeEditorImplComponent,
  ],
})
export class EditPolicyTypeImplComponent extends EditPolicyTypeComponent {

    constructor() {
        super();
        this.policyTypeApiStore.reset()
        this.success = this.policyTypeApiStore.success;
        this.loading = this.policyTypeApiStore.loading;
        this.error = this.policyTypeApiStore.error;
        this.messages = this.policyTypeApiStore.messages;

        this.route.queryParams.subscribe((params: any) => {
          if (params.id) {
            this.policyTypeApiStore.findById(params);
          }
        });
    }

    override beforeOnInit(form: EditPolicyTypeVarsForm): EditPolicyTypeVarsForm{     
        return form;
    }

    doNgOnDestroy(): void {
    }

    override beforeEditPolicyTypeSave(form: any): void {
        
      form.type = { ...this.policyTypeEditor?.formGroupControl?.value }
      this.policyTypeApiStore.save(form);
    }

    override get editPolicyTypeViewDetailsId(): number {
      return this.policyTypeEditor?.formGroupControl?.get('id')?.value;
    }
}